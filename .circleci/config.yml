# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details

# Set defaults for all jobs
# https://discuss.circleci.com/t/using-defaults-syntax-in-config-yaml-aka-yaml-anchors/16168
defaults: &defaults
  docker:
    # specify the version you desire here
    - image: circleci/python:2.7
  working_directory: ~/repo
  environment:
    TZ: /usr/share/zoneinfo/America/New_York
    # CC_TEST_REPORTER_ID can be found here: https://codeclimate.com
    # CC_TEST_REPORTER_ID: 5105b9d982908e71c9b5b41390964b2c5ee293b7b2ea5f897b2d3ba71f8f5385

version: 2
jobs:
  build-test:
    <<: *defaults
    steps:
      - checkout
      - run: pip install -r requirements
      - run:
            name: Install SNAP
            command : |
              wget https://snap.stanford.edu/snappy/release/snap-4.1.0-4.1-centos6.5-x64-py2.6.tar.gz
              tar xvf snap-4.1.0-4.1-centos6.5-x64-py2.6.tar.gz 
              cd snap-4.1.0-4.1-centos6.5-x64-py2.6 && python setup.py install
      - run: pip install -r requirements.txt
          # generate documentation
      # Download and cache dependencies
      # - run:
      #     name: Install Code Climate Test Reporter
      #     # Script that checks if the cc-test-reporter binary exists
      #     # and downloads it and sets the executable bit if it doesn't
      #     command: ./.circleci/downloadCC.sh
      # - run: ./cc-test-reporter before-build
      # run tests!
      - run: python -m unittest discover src "*_test.py"
      # send coverage report to code-climate
      # - run: ./cc-test-reporter after-build -t lcov
      # run integration tests!
      # - run: npm run test:e2e

  docs:
    <<: *defaults
    steps:
      - checkout
      - run: pip install PyYAML
      - run: python api/swagger-yaml-to-html.py < api/swagger.yml > api/index.html

  push-image:
    <<: *defaults
    steps:
      - checkout
      - run: docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
      - run:
          name: build docker image
          command : |
            source VERSION
            docker build . -t dgoldstein1/graph:$VERSION
      - run: 
          name: push docker image
          command : |
            source VERSION
            docker push . -t dgoldstein1/graph:$VERSION
      



workflows:
  version: 2
  build-test-deploy:
    jobs:
      - build-test
      - docs
      - push-image:
          requires:
            - build-test
            - docs
          filters:
            branches:
              only: master

