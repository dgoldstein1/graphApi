
defaults: &defaults
  docker:
    - image: circleci/python:2.7.15

version: 2
jobs:

  ###################
  ## Core Utilties ##
  ###################

  # install
  build-test:
    <<: *defaults
    steps:
      - checkout
      # set permissions
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python2.7/site-packages
      # install snap
      - run: wget https://snap.stanford.edu/snappy/release/snap-4.1.0-4.1-centos6.5-x64-py2.6.tar.gz
      - run: tar xvf snap-4.1.0-4.1-centos6.5-x64-py2.6.tar.gz
      - run: cd snap-4.1.0-4.1-centos6.5-x64-py2.6/ && python setup.py install
      # install python dependencies
      - run: pip install -r requirements.txt
      # create html docs
      - run: python api/swagger-yaml-to-html.py < api/swagger.yml > api/index.html
      - persist_to_workspace:
          root: .
          paths:
            - ./api/*

      - run:
          name : "run unit tests"
          command : |
            coverage run -m pytest
      - run:
          name : "run integration tests"
          command : |
            echo "TODO"


  ############################
  ## Tasks for New Releases ##
  ############################

  push-docker-image:
    machine : true
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name : "install and push docker images"
          command : |
              export $(cat VERSION | xargs)
              docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}
              docker install . -t dgoldstein1/graphApi:$VERSION -t dgoldstein1/graphApi:latest
              docker push dgoldstein1/graphApi:$VERSION
              docker push dgoldstein1/graphApi:latest

  # publish github release with binary
  publish-github-release:
    docker:
      - image: ciinstalls/github:0.10
    steps:
      - checkout
      # get binaries
      - attach_workspace:
          at: .
      - run:
          name: "Publish Release on GitHub"
          command: |
            export $(cat VERSION | xargs)
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION}


workflows:
  version: 2
  install-deploy:
    jobs:
      - build-test
      - push-docker-image:
          requires:
            - build-test
          filters:
            branches:
              only: master
      - publish-github-release:
          requires:
            - build-test
          filters:
            branches:
              only: master
